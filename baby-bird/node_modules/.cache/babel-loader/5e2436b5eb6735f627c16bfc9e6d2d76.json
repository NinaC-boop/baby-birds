{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/d/Homework/Github/baby-bird/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/d/Homework/Github/baby-bird/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar API = {\n  GetChatbotResponse: function () {\n    var _GetChatbotResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(message) {\n      var r;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return postData(message);\n\n            case 2:\n              r = _context.sent;\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                resolve(r.answers[0].answer); // .answers[0].answer\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function GetChatbotResponse(_x) {\n      return _GetChatbotResponse.apply(this, arguments);\n    }\n\n    return GetChatbotResponse;\n  }()\n};\n\nfunction postData(_x2) {\n  return _postData.apply(this, arguments);\n}\n\nfunction _postData() {\n  _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n    var headersData, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            headersData = {\n              \"Content-Type\": \"application/json\",\n              \"accept\": \"application/json\",\n              \"accept-encoding\": \"gzip, deflate\",\n              \"accept-language\": \"en-US,en;q=0.8\",\n              \"Authorization\": \"EndpointKey 43021727-483a-4885-bb3e-507ac2ff6393\"\n            };\n            _context2.next = 3;\n            return fetch(\"https://baby-bird-bot.azurewebsites.net/qnamaker/knowledgebases/50719c43-21a6-4f36-84eb-439090e98754/generateAnswer\", {\n              method: \"POST\",\n              headers: headersData,\n              body: JSON.stringify({\n                \"question\": message\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.json());\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _postData.apply(this, arguments);\n}\n\nexport default API;","map":{"version":3,"sources":["/mnt/d/Homework/Github/baby-bird/src/ChatbotAPI.js"],"names":["API","GetChatbotResponse","message","postData","r","Promise","resolve","reject","answers","answer","headersData","fetch","method","headers","body","JSON","stringify","response","json"],"mappings":";;AAAA,IAAMA,GAAG,GAAG;AACVC,EAAAA,kBAAkB;AAAA,uFAAE,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJC,QAAQ,CAACD,OAAD,CADJ;;AAAA;AACdE,cAAAA,CADc;AAAA,+CAEX,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CD,gBAAAA,OAAO,CAACF,CAAC,CAACI,OAAF,CAAU,CAAV,EAAaC,MAAd,CAAP,CAD2C,CACb;AAC/B,eAFM,CAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADR,CAAZ;;SASeN,Q;;;;;uEAAf,kBAAwBD,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMQ,YAAAA,WADN,GACoB;AAChB,8BAAgB,kBADA;AAEhB,wBAAU,kBAFM;AAGhB,iCAAmB,eAHH;AAIhB,iCAAmB,gBAJH;AAKhB,+BAAiB;AALD,aADpB;AAAA;AAAA,mBASyBC,KAAK,CAAC,qHAAD,EAAwH;AAClJC,cAAAA,MAAM,EAAE,MAD0I;AAElJC,cAAAA,OAAO,EAAEH,WAFyI;AAGlJI,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,4BAAYd;AAAb,eAAf;AAH4I,aAAxH,CAT9B;;AAAA;AASQe,YAAAA,QATR;AAAA,8CAeSA,QAAQ,CAACC,IAAT,EAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,eAAelB,GAAf","sourcesContent":["const API = {\n  GetChatbotResponse: async message => {\n    let r = await postData(message);\n    return new Promise(function(resolve, reject) {\n      resolve(r.answers[0].answer); // .answers[0].answer\n    });\n  }\n};\n\nasync function postData(message) {\n  let headersData = {\n    \"Content-Type\": \"application/json\",\n    \"accept\": \"application/json\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"accept-language\": \"en-US,en;q=0.8\",\n    \"Authorization\": \"EndpointKey 43021727-483a-4885-bb3e-507ac2ff6393\"\n  };\n\n  const response = await fetch(\"https://baby-bird-bot.azurewebsites.net/qnamaker/knowledgebases/50719c43-21a6-4f36-84eb-439090e98754/generateAnswer\", {\n    method: \"POST\",\n    headers: headersData,\n    body: JSON.stringify({\"question\": message}),\n  });\n\n  return response.json();\n}\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}